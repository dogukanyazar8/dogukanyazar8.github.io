// Firestore Security Rules
// Copy these rules to Firebase Console > Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Blog posts collection
    // - Anyone can read
    // - Only authenticated users can create, update, delete
    match /posts/{postId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.resource.data.keys().hasAll([
        'title', 'slug', 'content', 'excerpt', 'category', 'author', 'published'
      ]);
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Projects collection
    // - Anyone can read
    // - Only authenticated users can create, update, delete
    match /projects/{projectId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.resource.data.keys().hasAll([
        'title', 'description'
      ]);
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Categories collection (optional)
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // Tags collection (optional)
    match /tags/{tagId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // Users collection (if needed for extended user profiles)
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}
